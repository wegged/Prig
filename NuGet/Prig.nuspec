<?xml version="1.0"?>
<package >
  <metadata>
    <id>Prig</id>
    <version>2.0.0-alpha033</version>
    <title>Prig: Open Source Alternative to Microsoft Fakes</title>
    <authors>Akira Sugiura</authors>
    <owners>Akira Sugiura</owners>
    <licenseUrl>https://github.com/urasandesu/Prig/blob/master/LICENSE.md</licenseUrl>
    <projectUrl>https://github.com/urasandesu/Prig</projectUrl>
    <iconUrl>https://cdn.rawgit.com/urasandesu/Prig/master/Urasandesu.Prig.VSPackage/Resources/PrigIcon.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <summary>
      Prig is a lightweight framework for test indirections in .NET Framework.
    </summary>
    <description>
      Prig(PRototyping jIG) is a framework that generates a Test Double like Microsoft Fakes/Typemock Isolator/Telerik JustMock based on Unmanaged Profiler APIs. This framework enables that any methods are replaced with mocks. For example, a static property, a private method, a non-virtual member and so on.
    </description>
    <copyright>(c) 2014 Akira Sugiura. All rights reserved.</copyright>
    <tags>tdd isolation mock mocks mocking fake fakes faking unittest unittesting</tags>
    <releaseNotes>Version 2.0.0-alpha033
* 


Version 2.0.0-alpha032
* Merge Infrastructure Enhancement(See also Swathe issues [#1](https://github.com/urasandesu/Swathe/issues/1))
* Fixed #36: If an assembly is added-removed multiple times there is duplicated prebuild steps
* Fixed #35: Rebuilding after .prig file had types removed still contains removed types in prig assembly
* Fix error when enabling Test Adapter and no vstest running
* Fix more generation issues


Version 2.0.0-alpha031
* Response to Strange Behavior. Depending on the replacing method, the static method of the infrastructure is sometimes called before initializing the field of the type. For example, you will find the behavior if you try [a sample of Generics](https://github.com/urasandesu/Prig/wiki/Generics) with [Prig v2.0.0-alpha03](https://github.com/urasandesu/Prig/releases/tag/v2.0.0-alpha03) in Visual Studio integrated environment. It seems very strange behavior, but we have to consider that in this layer.


Version 2.0.0-alpha03
* Improve stability a little. Support the test runners that have never been able to run. The test runners like NUnit(GUI)/xUnit.net/MbUnit couldn't even start up until now(They were raising `ExecutionEngineException`).


Version 2.0.0-alpha02
* Fixed #29: Support Chocolatey v0.9.9.


Version 2.0.0-alpha01
* [NOTICE] Changed the package management system to Chocolatey from NuGet.
* [NOTICE] Supported Visual Studio integrated environment.


Version 1.1.0
* Release 1.1.
* Fixed #26: Prig assembly shouldn't need InternalsVisibleToAttribute.
* Fixed #27: Test stalled if adding the indirection settings for all members of DateTime.
* Fixed #28: The indirect tests sometimes fail.
* Supported the feature "Prig setup session" that makes adding the indirection stub settings more easier.


Version 1.0.0
* Release 1.
* Fixed #25: Default parameterized method can't call indirectly.


Version 0.0.0-alpha10
* Pre-release 10.
* Fixed #23: Can't be replaced the method that exposes the type of GAC unregistered assembly.
* Fixed #24: Add Comment-Based Help.
* Supported the feature that be able to replace any methods that have some non-public type in its signature.
* [NOTICE] Changed the generated stub's API. It became that the indirection stubs and proxies are generated ALWAYS(overwrite). Until now, it no longer generates stubs and proxies after it generated them once.


Version 0.0.0-alpha9
* Pre-release 9.
* Fixed #16: Nested Type can't be resolved in its indirection stub.
* Fixed #17: Prig can't uninstall correctly against the solution that contains multiple test projects.
* Fixed #18: `Get-IndirectionStubSetting` generates invalid alias against explict implemented interface.
* Fixed #19: `Find-IndirectionTarget` should filter the members that can't call indirectly by default.
* Fixed #20: Indirection stub settings for the instance method of an internal class generates build errors.


About more previous versions, please see https://github.com/urasandesu/Prig/releases.
    </releaseNotes>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="Urasandesu.NAnonym" />
      <frameworkAssembly assemblyName="Urasandesu.Prig.Framework" />
    </frameworkAssemblies>
  </metadata>
  <files>
    <file src="tools\**\*.*" target="tools" />
  </files>
</package>